@use "sass:map";
@use "breakpoints" as *;
$orientations: "baseline", "center", "end", "flex-end", "flex-start", "start", "space-around",
  "space-between", "space-evenly", "stretch", "right";

$nest-level: "self", "content", "items";
$arrangements: (
  "align": "v",
  "justify": "h",
  "place": "place",
);
.hh-flex {
  display: flex;
  &--row {
    flex-direction: row;
  }
  &--column {
    flex-direction: column;
  }
  @each $arrangement, $pseudonym in $arrangements {
    @each $level in $nest-level {
      @each $orientation in $orientations {
        &.#{$pseudonym}-#{$orientation}-#{$level} {
          #{$arrangement}-#{$level}: #{$orientation};
        }
      }
    }
  }
}
@mixin flexbox($orient, $gap) {
  flex-direction: $orient;
  gap: $gap;
  display: flex;
  @content;
}

@mixin gridCol($start, $end) {
  grid-row: $start / span $end;
}
@mixin gridRow($start, $end) {
  grid-column: $start / span $end;
}
@mixin gridCell($startCol, $endCol, $startRow, $endRow) {
  @include gridRow($startRow, $endRow);
  @include gridCol($startCol, $endCol);
}

@mixin grid($cols, $rows, $gap) {
  @if $rows != false {
    grid-template-rows: repeat($rows, 1fr);
  } @else {
    grid-auto-rows: auto;
  }
  @if $cols != false {
    grid-template-columns: repeat($cols, 1fr);
  } @else {
    grid-auto-columns: auto;
  }
  @if $gap {
    gap: $gap;
    padding: $gap;
  }
  display: grid;
}

.grid {
  @include grid(12, false, 0.4rem);
  @for $_ from 1 through 12 {
    &__#{$_}-col {
      @include gridRow(auto, $_);
    }
    &__#{$_}-row {
      @include gridCol(auto, $_);
    }
  }
}

.hh-grid {
  display: grid;
  &.hh-12-column {
    grid-template-columns: repeat(12, 1fr);
    grid-template-rows: 1fr;
  }
  &.hh-grid-spacing {
    padding: 10px;
    gap: 15px;
  }

  @for $_ from 1 through 12 {
    .hh-span-#{$_} {
      grid-column: auto / span $_;
    }
  }

  @each $arrangement, $pseudonym in $arrangements {
    @each $level in $nest-level {
      @each $orientation in $orientations {
        &.#{$pseudonym}-#{$orientation}-#{$level} {
          #{$arrangement}-#{$level}: #{$orientation};
        }
      }
    }
  }

  &.grid-term,
  .grid-term {
    color: gray;
  }
  &.grid-title,
  .grid-title {
    font-weight: 500;
    margin: 0 0 0 0;
    color: gray;
  }
  &.grid-header,
  .grid-header {
    font-weight: 500;
    margin: 0 0 0 0;
    color: gray;
  }
  &.grid-spacing,
  .grid-spacing {
    padding: 10px;
    gap: 15px;
  }
}
