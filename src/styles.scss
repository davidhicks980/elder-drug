// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '~@angular/material' as mat;
@use "colors" as *;
@use "palette" as *;
@use "grid" as *;
@use "component-overrides" as *;
@use "bem-mixin" as *;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$search-angular-primary: mat.define-palette(mat.$indigo-palette);
$search-angular-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$search-angular-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$search-angular-theme: mat.define-light-theme(
  (
    color: (
      primary: $search-angular-primary,
      accent: $search-angular-accent,
      warn: $search-angular-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($search-angular-theme);

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: "Noto Sans", "Helvetica Neue", sans-serif;
}

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}
/****** Elad Shechter's RESET *******/
/*** box sizing border-box for all elements ***/
*,
*::before,
*::after {
  box-sizing: border-box;
}
a {
  text-decoration: none;
  color: inherit;
  cursor: pointer;
}
button {
  background-color: transparent;
  color: inherit;
  border-width: 0;
  padding: 0;
  cursor: pointer;
}
figure {
  margin: 0;
}
input::-moz-focus-inner {
  border: 0;
  padding: 0;
  margin: 0;
}
ul,
ol,
dd {
  margin: 0;
  padding: 0;
  list-style: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}
p {
  margin: 0;
}
cite {
  font-style: normal;
}
fieldset {
  border-width: 0;
  padding: 0;
  margin: 0;
}
//overrides
.mat-sort-header-stem {
  background: none;
  display: none !important;
}

.mat-sort-header-pointer-middle {
  background: none;
  display: none !important;
}

.mat-sort-header-indicator {
  top: 5px !important;
}

/* Animate items as they're being sorted. */
.cdk-drop-list-dragging .cdk-drag {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

/* Animate an item that has been dropped. */
.cdk-drag-animating {
  transition: transform 300ms cubic-bezier(0, 0, 0.2, 1);
}

.cdk-drag-preview {
  list-style-position: inside;
  list-style-type: none;
  padding: 3px;
  border-radius: 5px;
  -webkit-column-break-inside: avoid;
  box-shadow: 0px 3px 3px 1px transparentize($gray-5, 0.9);
  border: 1px solid $secondary-2-1;
  background: tint($secondary-2-1, 80%);
}

.mat-sort-header-pointer-right,
.mat-sort-header-pointer-left {
  border-radius: 3px !important;
}

.mat-sort-header-arrow {
  color: currentColor !important;
  width: 0.72em !important;
  min-width: 0.72em !important;
  height: 1.6em !important;
}

.mat-sort-header-pointer-left,
.mat-sort-header-pointer-right {
  background: currentColor;
  width: 0.4em !important;
  height: 0.17em !important;
  position: absolute;
  top: 0;
}
.mat-tooltip.tooltip {
  font-size: 9pt;
  padding: 5px 10px 5px 10px;
}

.mat-tooltip.arrow-tip {
  // to make possible place arrow pseudo element outside tooltip with absolute positioning
  overflow: visible;
  position: relative;
  &.right {
    border-left: 6px solid red;
    margin-left: 5px;
    &::before {
      position: absolute;
      content: "";
      display: inline-block;
      background-color: red;
      clip-path: polygon(50% 0, 0 50%, 50% 100%);
      left: -12px;
      width: 15px;
      height: 15px;
      top: 50%;
      transform: translateY(-50%);
    }
  }
}

.mat-option.mat-active {
  color: black;
  background-color: tint($light-gray-2, 20%);
}
.mat-option:hover {
  color: black;

  background-color: tint($light-gray-2, 70%) !important;
}

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}
